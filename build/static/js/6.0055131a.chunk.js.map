{"version":3,"sources":["components/Map/MapHeader.tsx","components/Map/LocationMarker.tsx","components/Map/LocationInfoBox.tsx","components/Map/index.tsx","pages/Map.tsx"],"names":["Header","className","icon","locationIcon","LocationMarker","lat","lng","onClick","LocationInfoBox","info","id","title","initialState","Map","props","useState","locationInfo","setLocationInfo","eventData","center","zoom","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","defaultProps","_MapPage","setEventData","useEffect","a","fetch","res","json","events","fetchEvents","MapPage","React","memo"],"mappings":"wNAGaA,EAAS,WACpB,OACE,wBAAQC,UAAU,SAAlB,SACE,+BACE,cAAC,OAAD,CAAMC,KAAMC,MADd,4C,kBCFOC,EAAiB,SAAC,GAA0B,EAAxBC,IAAwB,EAAnBC,IAAoB,IAAfC,EAAc,EAAdA,QACzC,OACE,qBAAKN,UAAU,kBAAkBM,QAASA,EAA1C,SACE,cAAC,OAAD,CAAML,KAAMC,IAAcF,UAAU,qBCL7BO,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChC,OACE,sBAAKR,UAAU,gBAAf,UACE,qDACA,+BACE,sCACM,iCAASQ,EAAKC,QAEpB,yCACS,iCAASD,EAAKE,kBCMzBC,EAAe,CACnBF,GAAI,GACJC,MAAO,IAEHE,EAAM,SAACC,GAIN,IAAD,EACoCC,mBAASH,GAD7C,mBACGI,EADH,KACiBC,EADjB,KAEIC,EAA4BJ,EAA5BI,UAAWC,EAAiBL,EAAjBK,OAAQC,EAASN,EAATM,KAErBC,EAAUH,EAAUI,KAAI,SAACC,GAC7B,OAA4B,IAAxBA,EAAGC,WAAW,GAAGd,GAEjB,cAAC,EAAD,CACEL,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAClCpB,IAAKiB,EAAGE,WAAW,GAAGC,YAAY,GAClCnB,QAAS,kBAAMU,EAAgB,CAAEP,GAAIa,EAAGb,GAAIC,MAAOY,EAAGZ,WAIrD,QAGT,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,IAAD,CACE0B,iBAAkB,CAAEC,IAAKC,2CACzBC,cAAeX,EACfY,YAAaX,EAHf,SAKGC,IAEFL,GAAgB,cAAC,EAAD,CAAiBP,KAAMO,QAK9CH,EAAImB,aAAe,CACjBb,OAAQ,CACNd,IAAK,QACLC,KAAM,UAERc,KAAM,GCzDR,IAAMa,EAAW,WAAO,IAAD,EACalB,mBAAS,IADtB,mBACdG,EADc,KACHgB,EADG,KAarB,OAVAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,sEACAC,MAChB,mDAFgB,cACZC,EADY,gBAIOA,EAAIC,OAJX,gBAIVC,EAJU,EAIVA,OACRN,EAAaM,GALK,2CAAH,qDAOjBC,KACC,IAED,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKvB,UAAWA,QAKhBwB,EAAUC,IAAMC,KAAKX,GACZS","file":"static/js/6.0055131a.chunk.js","sourcesContent":["import React from 'react';\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/fire-alert';\nexport const Header = () => {\n  return (\n    <header className=\"header\">\n      <h1>\n        <Icon icon={locationIcon} /> Wildfire Tracker (Powered By NASA)\n      </h1>\n    </header>\n  );\n};\n","import React from 'react';\nimport { Icon } from '@iconify/react';\nimport locationIcon from '@iconify/icons-mdi/fire-alert';\n\nexport const LocationMarker = ({ lat, lng, onClick }) => {\n  return (\n    <div className=\"location-marker\" onClick={onClick}>\n      <Icon icon={locationIcon} className=\"location-icon\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const LocationInfoBox = ({ info }) => {\n  return (\n    <div className=\"location-info\">\n      <h2>Event Location Info</h2>\n      <ul>\n        <li>\n          ID: <strong>{info.id}</strong>\n        </li>\n        <li>\n          TITLE: <strong>{info.title}</strong>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'src/assets/scss/map.scss';\nimport GoogleMapReact from 'google-map-react';\nimport { LocationMarker } from './LocationMarker';\nimport { LocationInfoBox } from './LocationInfoBox';\n\ninterface EventType {\n  id: string;\n  title: string;\n  categories: {\n    id: number;\n  };\n  geometries: {\n    coordinates: [number, number];\n  };\n}\n\nconst initialState = {\n  id: '',\n  title: '',\n};\nconst Map = (props: {\n  eventData: EventType[];\n  center: number;\n  zoom: number;\n}) => {\n  const [locationInfo, setLocationInfo] = useState(initialState);\n  const { eventData, center, zoom } = props;\n\n  const markers = eventData.map((ev: EventType) => {\n    if (ev.categories[0].id === 8) {\n      return (\n        <LocationMarker\n          lat={ev.geometries[0].coordinates[1]}\n          lng={ev.geometries[0].coordinates[0]}\n          onClick={() => setLocationInfo({ id: ev.id, title: ev.title })}\n        />\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div className=\"map\">\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_GGMap_Key }}\n        defaultCenter={center}\n        defaultZoom={zoom}\n      >\n        {markers}\n      </GoogleMapReact>\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\n    </div>\n  );\n};\n\nMap.defaultProps = {\n  center: {\n    lat: 42.3265,\n    lng: -122.8756,\n  },\n  zoom: 6,\n};\n\nexport { Map };\n\n// AIzaSyD7ZcsFCAtJbQMA6pta1G1XsRvFXLtpJfI\n","import React, { useEffect, useState } from 'react';\nimport { Header } from 'src/components/Map/MapHeader';\nimport { Map } from 'src/components/Map';\n\nconst _MapPage = () => {\n  const [eventData, setEventData] = useState([]);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      const res = await fetch(\n        'https://eonet.sci.gsfc.nasa.gov/api/v2.1/events',\n      );\n      const { events } = await res.json();\n      setEventData(events);\n    };\n    fetchEvents();\n  }, []);\n  return (\n    <div>\n      <Header />\n      <Map eventData={eventData} />\n    </div>\n  );\n};\n\nconst MapPage = React.memo(_MapPage);\nexport default MapPage;\n"],"sourceRoot":""}